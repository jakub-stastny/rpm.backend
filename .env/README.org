* About

# The link below is a perfectly valid Orgmode link, followable with C-c C-o.
# Unfortunately GitHub doesn't know how to display it correctly.
#
# Try with [[https://orgmode.org/guide/Hyperlinks.html][with ID]].
Literate DevOps script to set up the current project. After the setup, there's a [[#writing-clojure-apps][guide to writing Clojure apps in Emacs]].

* Installation

In Emacs press =C-c C-c= to evaluate each code block in this section.

** Emacs packages

#+BEGIN_SRC elisp :results silent
  (dolist (package '(clojure-mode cider))
    (unless (package-installed-p package)
      (message "~ Installing %s." package)
      (package-install package)))
#+END_SRC

* Configuration

In Emacs press =C-c C-v t= to tangle all the code blocks in this file.

** Emacs per-project configuration

We want to keep environment-specific configuration out of our =~/.emacs=.

#+BEGIN_SRC elisp :tangle emacs.el
  (add-to-list 'load-path (expand-file-name "~/.zsh/environments/elisp"))

  (load "literate-programming")
  (load-theme 'adwaita)
#+END_SRC

*** Links

- Dotfiles: [[https://github.com/jakub-stastny/dotfiles/blob/master/.zsh/environments/elisp/literate-programming.el][~/zsh/environments/elisp/literate-programming.el]]

** ZSH per-project configuration

#+BEGIN_SRC shell :tangle zsh.zsh
  load ~/.zsh/environments/helpers.zsh && save-function-list
  load ~/.zsh/environments/basic.zsh
  load ~/.zsh/environments/emacs.zsh

  rename-first-tab

  # Custom functions & aliases.

  # We compile on save, but for the first-time compilation,
  # we want to be able to do it from the shell, rather than
  # having to go and save manually each file from Emacs.
  tangle() {
    cd src
    echo "(dolist (file argv) (message file) (find-file file) (org-babel-tangle))" > compile.el
    emacs --script compile.el *.org
    rm compile.el
    cd -
  }

  run() {
    clj -M -m rpm.main
  }

  t() {
    clj -X:test
  }

  report-custom-functions
#+END_SRC

*** Links

- Dotfiles: [[https://github.com/jakub-stastny/dotfiles/blob/master/.zsh/environments/helpers.zsh][~/zsh/environments/helpers.zsh]]
- Dotfiles: [[https://github.com/jakub-stastny/dotfiles/blob/master/.zsh/environments/basic.zsh][~/zsh/environments/basic.zsh]]
- Dotfiles: [[https://github.com/jakub-stastny/dotfiles/blob/master/.zsh/environments/emacs.zsh][~/zsh/environments/emacs.zsh]]

* Writing Clojure apps in Emacs
:PROPERTIES:
:CUSTOM_ID: writing-clojure-apps
:END:

** Structural editing
*** TODO Describe

** REPL-driven development
*** TODO Describe
